-- 다중행 함수(여러 행을 바탕으로 하나의 결과값을 도출)
-- 7-1 SUM()
SELECT SUM(SAL)
    FROM EMP;

-- 7-2 다중행 함수 에러( 여러행이 나올수 있는데이터(ENAME), 결과값이 한행(SUM())))
SELECT ENAME, SUM(SAL)
    FROM EMP;
    
-- 7-3 SUM()
SELECT SUM(COMM)
    FROM EMP;
    
-- 7-4 SUM() (DISTINCT, ALL)과 함께 사용 => 중복값 제거시
SELECT SUM(DISTINCT SAL),
            SUM(ALL SAL),
            SUM(SAL)
        FROM EMP;

-- 7-5 COUNT(*)
SELECT COUNT(*)
    FROM EMP;
    
-- 7-6 부서번호가 30인 직원수
SELECT COUNT(*)
    FROM EMP
    WHERE DEPTNO = 30;
    
-- 7-7 COUNT(*) (DISTINCT, ALL) 사용 -> 중복값 제거
SELECT COUNT(DISTINCT SAL),
           COUNT(ALL SAL),
           COUNT(SAL)
        FROM EMP;
        
-- 7-8 COUNT
SELECT COUNT(COMM)
    FROM EMP;
    
-- 7-9 COUNT IS NOT NULL과 사용
SELECT COUNT(COMM)
    FROM EMP
    WHERE COMM IS NOT NULL;
    
-- 7-10 MAX()
SELECT MAX(SAL)
    FROM EMP
    WHERE DEPTNO = 10;
    
-- 7-11 MIN()
SELECT MIN(SAL)
    FROM EMP
    WHERE DEPTNO = 10;

-- 7-12 MAX() 날짜와 사용 가능 MAX() -> 최근, MIN() -> 오래된
SELECT MAX(HIREDATE)
    FROM EMP
    WHERE DEPTNO = 20;

-- 7-13 MIN() 
SELECT MIN(HIREDATE)
    FROM EMP
    WHERE DEPTNO = 20;
    
-- 7-14 AVG()
SELECT AVG(SAL)
    FROM EMP
    WHERE DEPTNO='30';
    
-- 7-15 AVG() DISTINCT와 사용 가능
SELECT AVG(DISTINCT SAL)
    FROM EMP
    WHERE DEPTNO='30';
    
-- 7-16 집합 연산자를 사용한 평균 급여
SELECT AVG(SAL), '10' AS DEPTNO FROM EMP WHERE DEPTNO=10
UNION
SELECT AVG(SAL), '20' AS DEPTNO FROM EMP WHERE DEPTNO=20
UNION
SELECT AVG(SAL), '30' AS DEPTNO FROM EMP WHERE DEPTNO=30;

-- 7-17 GROUP BY
SELECT AVG(SAL), DEPTNO
    FROM EMP
    GROUP BY DEPTNO;
        
-- 7-18 부서번호, 직책별 평균 급여
SELECT DEPTNO, JOB, AVG(SAL)
    FROM EMP
    GROUP BY DEPTNO, JOB
    ORDER BY DEPTNO, JOB;

-- 7-19 다중행 함수를 사용할떄 SELECT 절에 열을 쓸경우 GROUP BY 해야함 -> 열의 종류에 따른 행의 갯수가 다름
SELECT ENAME, DEPTNO, AVG(SAL)
    FROM EMP
    GROUP BY DEPNO;  --에러, ENAME 필요

-- 7-20 HAVING -> SELECT 문에 GROUPY BY절이 존재할때 사용
SELECT DEPTNO, JOB, AVG(SAL)
    FROM EMP
    GROUP BY DEPTNO, JOB
    HAVING AVG(SAL) >= 2000
    ORDER BY DEPTNO, JOB;

-- 7-21 HAVING 절이 아닌 WHERE절을 사용하면 오류(그룹화 된 경우)
SELECT DEPTNO, JOB, AVG(SAL)
    FROM EMP
    WHERE AVG(SAL) >= 2000 -- 에러
    GROUP BY DEPTNO, JOB
    ORDER BY DEPTNO, JOB;

-- 7-22 HAVING
SELECT DEPTNO, JOB, AVG(SAL)
    FROM EMP
        GROUP BY DEPTNO, JOB
        HAVING AVG(SAL) >= 2000
        ORDER BY DEPTNO, JOB;

-- 7-23 7-23에 WHERE 절 추가한 경우(WHERE 절이 먼저 실행)
SELECT DEPTNO, JOB, AVG(SAL)
    FROM EMP
        WHERE SAL<= 3000
        GROUP BY DEPTNO, JOB
        HAVING AVG(SAL) >= 2000
        ORDER BY DEPTNO, JOB;

-- 7-24 HAVING BEFORE ROLLUP
SELECT DEPTNO, JOB, COUNT(*), MAX(SAL), SUM(SAL), AVG(SAL)
    FROM EMP
        GROUP BY DEPTNO, JOB
        ORDER BY DEPTNO, JOB;

-- 7-25 ROLLUP
SELECT DEPTNO, JOB, COUNT(*), MAX(SAL), SUM(SAL), AVG(SAL)
    FROM EMP
    GROUP BY ROLLUP(DEPTNO,JOB );

-- 7-26 CUBE
SELECT DEPTNO, JOB, COUNT(*), MAX(SAL), SUM(SAL), AVG(SAL)
    FROM EMP
    GROUP BY CUBE(DEPTNO, JOB)
    ORDER BY DEPTNO, JOB;

-- 7-27 GROUP화 이후 ROLLUP
SELECT DEPTNO, JOB, COUNT(*)
    FROM EMP
    GROUP BY DEPTNO, ROLLUP(JOB);

-- 7-28 GROUP화 이후 ROLLUP(2)
SELECT DEPTNO, JOB, COUNT(*)
    FROM EMP
    GROUP BY JOB, ROLLUP(DEPTNO);

-- 7-29 GROUPING SET
SELECT DEPTNO, JOB, COUNT(*)
    FROM EMP
    GROUP BY GROUPING SETS(DEPTNO, JOB)
    ORDER BY DEPTNO, JOB;
    
-- 7-30 GROUNPING
SELECT DEPTNO, JOB, COUNT(*), MAX(SAL), SUM(SAL), AVG(SAL),
            GROUPING(DEPTNO),
            GROUPING(JOB)
    FROM EMP
    GROUP BY CUBE(DEPTNO, JOB)
    ORDER BY DEPTNO, JOB;

-- 7-31 DECODE 이용 GROUPING
SELECT DECODE(GROUPING(DEPTNO), 1, 'ALL_DEPT', DEPTNO) AS DEPTNO,
            DECODE(GROUPING(JOB), 1, 'ALL_JOB', JOB) AS JOB,
            COUNT(*), MAX(SAL), SUM(SAL), AVG(SAL)
        FROM EMP
        GROUP BY CUBE(DEPTNO, JOB)
        ORDER BY DEPTNO, JOB;

-- 7-32 GROUPING_ID (조건을 이진수로 계산하여 결과)
SELECT DEPTNO, JOB, COUNT(*), SUM(SAL),
            GROUPING(DEPTNO),
            GROUPING(JOB),
            GROUPING_ID(DEPTNO,JOB)
        FROM EMP
        GROUP BY CUBE(DEPTNO, JOB)
        ORDER BY DEPTNO, JOB;
        
-- 7-33 GROUP BY 예시
SELECT DEPTNO, ENAME
    FROM EMP
    GROUP BY DEPTNO, ENAME;

-- 7-34 LISTAGG 부서별 사원이름 나란히 출력
SELECT DEPTNO,
        LISTAGG(ENAME, ', ')
        WITHIN GROUP(ORDER BY SAL DESC) AS ENAME
    FROM EMP
    GROUP BY DEPTNO;

-- 7-35 부서별 직책별 최고 급여
SELECT DEPTNO, JOB, MAX(SAL)
FROM EMP
GROUP BY DEPTNO, JOB
ORDER BY DEPTNO, JOB;

-- 7-36 PIVOT (행 -> 열)
SELECT *
    FROM(SELECT DEPTNO, JOB, SAL FROM EMP)
    PIVOT(MAX(SAL)
        FOR DEPTNO IN(10, 20, 30))
    ORDER BY JOB;
    
-- 7-37 PIVOT (행 -> 열)
SELECT *
    FROM(SELECT DEPTNO, JOB, SAL FROM EMP)
    PIVOT(MAX(SAL)
        FOR JOB IN ('CLERK' AS CLERK,
                        'SALESMAN' AS SALESMAN,
                        'PRESIDENT' AS PRESIDENT,
                        'MANAGER' AS MANAGER,
                        'ANALYST' AS ANALYST))
    ORDER BY DEPTNO;
    
-- 7-38 DECODE를 이용한 PIVOT효과
SELECT DEPTNO,
            MAX(DECODE(JOB, 'CLERK', SAL)) AS "CLERK",
            MAX(DECODE(JOB, 'SALESMAN', SAL)) AS "SALESMAN",
            MAX(DECODE(JOB, 'PRESIDENT', SAL)) AS "PRESIDENT",
            MAX(DECODE(JOB, 'MANAGER', SAL)) AS "MANAGER",
            MAX(DECODE(JOB, 'ANALYST', SAL)) AS "ANALYST"
        FROM EMP
        GROUP BY DEPTNO
        ORDER BY DEPTNO;

-- 7-39 UNPIVOT
SELECT*
FROM(SELECT DEPTNO,
            MAX(DECODE(JOB, 'CLERK', SAL)) AS "CLERK",
            MAX(DECODE(JOB, 'SALESMAN', SAL)) AS "SALESMAN",
            MAX(DECODE(JOB, 'PRESIDENT', SAL)) AS "PRESIDENT",
            MAX(DECODE(JOB, 'MANAGER', SAL)) AS "MANAGER",
            MAX(DECODE(JOB, 'ANALYST', SAL)) AS "ANALYST"
        FROM EMP
        GROUP BY DEPTNO
        ORDER BY DEPTNO)
UNPIVOT(
    SAL FOR JOB IN(CLERK, SALESMAN, PRESIDENT, MANAGER, ANALYST))
    ORDER BY DEPTNO;