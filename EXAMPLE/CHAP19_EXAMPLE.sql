SET SERVEROUTPUT ON;
--EX01
CREATE OR REPLACE PROCEDURE PRO_DEPT_IN
(
DEPTNO DEPT.DEPTNO%TYPE,
DNAME DEPT.DNAME%TYPE,
LOC DEPT.LOC%TYPE
)
IS
BEGIN
    DBMS_OUTPUT.PUT_LINE('부서 번호 : ' || DEPTNO);
    DBMS_OUTPUT.PUT_LINE('부서 이름 : ' || DNAME);
    DBMS_OUTPUT.PUT_LINE('지역 : ' || LOC);
END PRO_DEPT_IN;
/

DECLARE

BEGIN
    PRO_DEPT_IN(10, 'ACCOUNTING', 'NEW YORK');
END;
/


--EX02
CREATE OR REPLACE FUNCTION FUNC_DATE_KOR
(
 FUNC_DATE DATE
)
RETURN VARCHAR2
IS
BEGIN
RETURN TO_CHAR(FUNC_DATE, 'YYYY"년 "MM"월 "DD"일"');
END FUNC_DATE_KOR; 
/

SELECT ENAME, FUNC_DATE_KOR(HIREDATE) AS HIREDATE
FROM EMP
WHERE EMPNO=7369;

--EX03
--DEPT 테이블과 같은 열구조 및 데이터를 가진 DEPT_TRG
CREATE TABLE DEPT_TRG AS SELECT *FROM DEPT;

--DEPT_TRG_LOG 
CREATE TABLE DEPT_TRG_LOG(
    TABLENAME VARCHAR2(10),
    DML_TYPE VARCHAR2(10),
    DEPTNO NUMBER(2),
    USER_NAME VARCHAR2(30),
    CHANGE_DATE DATE
);

--TRG_DEPT_LOG 트리거

SET SERVEROUTPUT ON;

CREATE OR REPLACE TRIGGER TRG_DEPT_LOG
AFTER
INSERT OR UPDATE OR DELETE ON DEPT_TRG
FOR EACH ROW

BEGIN
    IF INSERTING THEN
        INSERT INTO DEPT_TRG_LOG VALUES('DEPT_TRG', 'INSERT', :NEW.DEPTNO,
                                                    SYS_CONTEXT('USERENV', 'SESSION_USER'),SYSDATE);
    ELSIF UPDATING THEN
        INSERT INTO DEPT_TRG_LOG VALUES('DEPT_TRG', 'UPDATE', :OLD.DEPTNO,
                                                    SYS_CONTEXT('USERENV', 'SESSION_USER'),SYSDATE);                                                    
                                                    
    ELSIF DELETING THEN
        INSERT INTO DEPT_TRG_LOG VALUES('DEPT_TRG', 'DELETE', :OLD.DEPTNO,
                                                    SYS_CONTEXT('USERENV', 'SESSION_USER'),SYSDATE);
    END IF;
END;
/

-- 생성 체크
INSERT INTO DEPT_TRG VALUES(99, 'TEST_DNAME', 'SEOUL');

UPDATE DEPT_TRG SET LOC='TEST_LOC' WHERE DEPTNO=99;

DELETE FROM DEPT_TRG WHERE DEPTNO=99;

SELECT*FROM DEPT_TRG;

SELECT*FROM DEPT_TRG_LOG;


