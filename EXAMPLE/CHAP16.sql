-- 16-1 출력하기
SET SERVEROUTPUT ON;
BEGIN
    DBMS_OUTPUT.PUT_LINE('HELLO, PL/SQL!');
END;
/

-- 16-2 주석사용 한줄 주석 "--",  
DECLARE
    V_EMPNO NUMBER(4) := 7788;
    V_ENAME VARCHAR2(10);
BEGIN
    V_ENAME := 'SCOTT';
    --DBMS_OUTPUT.PUT_LINE('V_EMPNO : ' || V_EMPNO);
    DBMS_OUTPUT.PUT_LINE('V_EANEM : ' || V_ENAME);
END;
/

-- 16-3 여러줄 주석 "/* */"
DECLARE
    V_EMPNO NUMBER(4) := 7788;
    V_ENAME VARCHAR2(10);
BEGIN
    V_ENAME := 'SCOTT';
    /*
    DBMS_OUTPUT.PUT_LINE('V_EMPNO : ' || V_EMPNO);
    DBMS_OUTPUT.PUT_LINE('V_ENAME : ' || V_ENAME);
    */
END;
    /
    
-- 16-4 변수 선언 및 값 출력
DECLARE
    V_EMPNO NUMBER(4) := 7788;
    V_ENAME VARCHAR2(10);
BEGIN
    V_ENAME := 'SCOTT';
    DBMS_OUTPUT.PUT_LINE('V_EMPNO : ' || V_EMPNO);
    DBMS_OUTPUT.PUT_LINE('V_ENAME : ' || V_ENAME);
END;
/

-- 16-5 상수에 대입, 출력
DECLARE
    V_TAX CONSTANT NUMBER(1) := 3;
BEGIN
    D   BMS_OUTPUT.PUT_LINE('V_TEX : ' || V_TAX);
END;
/

-- 16-6 기본값 DEFAULT 설정
DECLARE
    V_DEPTNO NUMBER(2) DEFAULT 10;
BEGIN
    DBMS_OUTPUT.PUT_LINE('V_DEPTNO : ' || V_DEPTNO);
END;
/

-- 16-7 NOT NULL
DECLARE
    V_DEPTNO NUMBER(2) NOT NULL := 10;
BEGIN
    DBMS_OUTPUT.PUT_LINE('V_DEPTNO : ' || V_DEPTNO);
END;
/

-- 16-8 NOT NULL, DEFAULT
DECLARE
    V_DEPTNO NUMBER(2) NOT NULL DEFAULT 10;
BEGIN
    DBMS_OUTPUT.PUT_LINE('V_DEPTNO : ' || V_DEPTNO);
END;
/

-- 16-9 참조형(열) 변수에 값 대입 후 출력
DECLARE
    V_DEPTNO DEPT.DEPTNO%TYPE := 50;
BEGIN
    DBMS_OUTPUT.PUT_LINE('V_DEPTNO : ' || V_DEPTNO);
END;
/

-- 16-10 참조형(행) 변수에 값 대입 후 출력
DECLARE 
    V_DEPT_ROW DEPT%ROWTYPE;
BEGIN
    SELECT DEPTNO, DNAME, LOC INTO V_DEPT_ROW
    FROM DEPT  
    WHERE DEPTNO=40;
    DBMS_OUTPUT.PUT_LINE('DEPTNO : ' || V_DEPT_ROW.DEPTNO);
    DBMS_OUTPUT.PUT_LINE('DNAME : ' || V_DEPT_ROW.DNAME);
    DBMS_OUTPUT.PUT_LINE('LOC : ' || V_DEPT_ROW.LOC);
END;
/

-- 16-11 IF THEN 변수값 홀수인지 확인
DECLARE
    V_NUMBER NUMBER:=13;
BEGIN
    IF MOD(V_NUMBER, 2) = 1 THEN
        DBMS_OUTPUT.PUT_LINE('V_NUMBER는 홀수입니다.!');
    END IF;
END;
/

-- 16-12 짝수값 
DECLARE
    V_NUMBER NUMBER:=14;
BEGIN
    IF MOD(V_NUMBER, 2) = 1 THEN
        DBMS_OUTPUT.PUT_LINE('V_NUMBER는 홀수입니다.!');
    END IF;
END;
/

-- 16-13 IF THEN ELSE
DECLARE
    V_NUMBER NUMBER:=14;
BEGIN
    IF MOD(V_NUMBER, 2) = 1 THEN
        DBMS_OUTPUT.PUT_LINE('V_NUMBER는 홀수입니다.!');
    ELSE
        DBMS_OUTPUT.PUT_LINE('V_NUMBER는 짝수입니다.!');
    END IF;
END;
/

-- 16-14 IF ELSIF ELSE 
DECLARE
    V_SCORE NUMBER := 87;
BEGIN
    IF V_SCORE >= 90 THEN
        DBMS_OUTPUT.PUT_LINE('A학점');
    ELSIF V_SCORE >=80 THEN
        DBMS_OUTPUT.PUT_LINE('B학점');
    ELSIF V_SCORE >=70 THEN
        DBMS_OUTPUT.PUT_LINE('C학점');        
    ELSIF V_SCORE >=60 THEN
        DBMS_OUTPUT.PUT_LINE('D학점');                        
    ELSE
        DBMS_OUTPUT.PUT_LINE('F학점');
    END IF;
END;
/

-- 16-15 CASE
DECLARE
    V_SCORE NUMBER := 87;
BEGIN
    CASE TRUNC(V_SCORE/10)
        WHEN 10 THEN DBMS_OUTPUT.PUT_LINE('A학점');
        WHEN 9 THEN DBMS_OUTPUT.PUT_LINE('A학점');
        WHEN 8 THEN DBMS_OUTPUT.PUT_LINE('B학점');
        WHEN 7 THEN DBMS_OUTPUT.PUT_LINE('C학점');
        WHEN 6 THEN DBMS_OUTPUT.PUT_LINE('D학점');
        ELSE DBMS_OUTPUT.PUT_LINE('F학점');
    END CASE;
END;
/

-- 16-16 검색 CASE
DECLARE
    V_SCORE NUMBER:=87;
BEGIN
    CASE
        WHEN V_SCORE>=90 THEN DBMS_OUTPUT.PUT_LINE('A학점');
        WHEN V_SCORE>=80 THEN DBMS_OUTPUT.PUT_LINE('B학점');
        WHEN V_SCORE>=70 THEN DBMS_OUTPUT.PUT_LINE('C학점');
        WHEN V_SCORE>=60 THEN DBMS_OUTPUT.PUT_LINE('D학점');
        ELSE DBMS_OUTPUT.PUT_LINE('F학점');
    END CASE;
END;
/

-- 16-17 LOOP
DECLARE
    V_NUM NUMBER :=0;
BEGIN
    LOOP
        DBMS_OUTPUT.PUT_LINE('현재 V_NUM : ' || V_NUM);
        V_NUM := V_NUM+1;
        EXIT WHEN V_NUM > 4;
    END LOOP;
END;
/

-- 16-18 WHILE LOOP
DECLARE
    V_NUM NUMBER :=0;
BEGIN
    WHILE V_NUM<4 LOOP
        DBMS_OUTPUT.PUT_LINE('현재 V_NUM : ' || V_NUM);
        V_NUM := V_NUM+1;
    END LOOP;
END;
/

-- 16-19 FOR LOOP
BEGIN
    FOR I IN 0..4 LOOP
        DBMS_OUTPUT.PUT_LINE('현재 i의 값 : ' || i);   
    END LOOP;
END;
/

-- 16-20 FOR IN REVERSE LOOP
BEGIN
    FOR i IN REVERSE 0..4 LOOP
        DBMS_OUTPUT.PUT_LINE('현재 i의 값 : ' || i);
    END LOOP;
END;
/

-- 16-21 CONTINUE
BEGIN
    FOR i IN 0..4 LOOP
        CONTINUE WHEN MOD(i, 2) = 1;
        DBMS_OUTPUT.PUT_LINE('현재 i의 값 : ' || i);
    END LOOP;
END;
/

        
        