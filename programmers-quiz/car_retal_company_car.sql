다음은 어느 자동차 대여 회사에서 대여중인 자동차들의 정보를 담은 CAR_RENTAL_COMPANY_CAR 테이블입니다. 
CAR_RENTAL_COMPANY_CAR 테이블은 아래와 같은 구조로 되어있으며, CAR_ID, CAR_TYPE, DAILY_FEE, OPTIONS 는 
각각 자동차 ID, 자동차 종류, 일일 대여 요금(원), 자동차 옵션 리스트를 나타냅니다.

Column name Type  Nullable
CAR_ID  INTEGER FALSE
CAR_TYPE  VARCHAR(255)  FALSE
DAILY_FEE INTEGER FALSE
OPTIONS VARCHAR(255)  FALSE
자동차 종류는 '세단', 'SUV', '승합차', '트럭', '리무진' 이 있습니다. 자동차 옵션 리스트는 콤마(',')로 
구분된 키워드 리스트(예: '열선시트', '스마트키', '주차감지센서')로 되어있으며, 
키워드 종류는 '주차감지센서', '스마트키', '네비게이션', '통풍시트', '열선시트', '후방카메라', '가죽시트' 가 있습니다.

CREATE TABLE IF NOT EXISTS CAR_RENTAL_COMPANY_CAR (
  CAR_ID INTEGER NOT NULL PRIMARY KEY,
  CAR_TYPE VARCHAR(255) NOT NULL,
  DAILY_FEE INTEGER NOT NULL,
  OPTIONS VARCHAR(255) NOT NULL
);

INSERT INTO CAR_RENTAL_COMPANY_CAR (CAR_ID, CAR_TYPE, DAILY_FEE, OPTIONS) VALUES (1, '세단', 16000, '가죽시트,열선시트,후방카메라');
INSERT INTO CAR_RENTAL_COMPANY_CAR (CAR_ID, CAR_TYPE, DAILY_FEE, OPTIONS) VALUES (2, 'SUV', 14000, '스마트키,네비게이션,열선시트');
INSERT INTO CAR_RENTAL_COMPANY_CAR (CAR_ID, CAR_TYPE, DAILY_FEE, OPTIONS) VALUES (3, 'SUV', 22000, '주차감지센서,후방카메라,가죽시트');
INSERT INTO CAR_RENTAL_COMPANY_CAR (CAR_ID, CAR_TYPE, DAILY_FEE, OPTIONS) VALUES (4, '트럭', 35000, '주차감지센서,네비게이션,열선시트');
INSERT INTO CAR_RENTAL_COMPANY_CAR (CAR_ID, CAR_TYPE, DAILY_FEE, OPTIONS) VALUES (5, 'SUV', 16000, '가죽시트,네비게이션,열선시트,후방카메라,주차감지센서');

-- 테이블 확인
SELECT * FROM CAR_RENTAL_COMPANY_CAR;

-- 데이터 비우기
TRUNCATE CAR_RENTAL_COMPANY_CAR;

다음은 어느 자동차 대여 회사의 자동차 대여 기록 정보를 담은 CAR_RENTAL_COMPANY_RENTAL_HISTORY 테이블입니다. 
CAR_RENTAL_COMPANY_RENTAL_HISTORY 테이블은 아래와 같은 구조로 되어있으며, 
HISTORY_ID, CAR_ID, START_DATE, END_DATE 는 각각 자동차 대여 기록 ID, 자동차 ID, 대여 시작일, 대여 종료일을 나타냅니다.

Column name Type  Nullable
HISTORY_ID  INTEGER FALSE
CAR_ID  INTEGER FALSE
START_DATE  DATE  FALSE
END_DATE  DATE  FALSE

CREATE TABLE IF NOT EXISTS CAR_RENTAL_COMPANY_RENTAL_HISTORY (
  HISTORY_ID INTEGER NOT NULL PRIMARY KEY,
  CAR_ID  INTEGER NOT NULL,
  START_DATE DATE NOT NULL,
  END_DATE DATE NOT NULL
);

INSERT INTO CAR_RENTAL_COMPANY_RENTAL_HISTORY (HISTORY_ID, CAR_ID, START_DATE, END_DATE) VALUES (1, 4, '2022-09-27', '2022-11-27');
INSERT INTO CAR_RENTAL_COMPANY_RENTAL_HISTORY (HISTORY_ID, CAR_ID, START_DATE, END_DATE) VALUES (2, 3, '2022-10-03', '2022-11-04');
INSERT INTO CAR_RENTAL_COMPANY_RENTAL_HISTORY (HISTORY_ID, CAR_ID, START_DATE, END_DATE) VALUES (3, 2, '2022-09-05', '2022-09-05');
INSERT INTO CAR_RENTAL_COMPANY_RENTAL_HISTORY (HISTORY_ID, CAR_ID, START_DATE, END_DATE) VALUES (4, 1, '2022-09-01', '2022-09-30');
INSERT INTO CAR_RENTAL_COMPANY_RENTAL_HISTORY (HISTORY_ID, CAR_ID, START_DATE, END_DATE) VALUES (5, 3, '2022-09-16', '2022-10-15');

-- 테이블 확인
SELECT * FROM CAR_RENTAL_COMPANY_RENTAL_HISTORY;

-- 데이터 비우기
TRUNCATE CAR_RENTAL_COMPANY_RENTAL_HISTORY;

-- CAR_RENTAL_COMPANY_CAR 테이블에서 자동차 종류가 'SUV'인 자동차들의 평균 일일 대여 요금을 출력하는 SQL문을 작성해주세요. 
-- 이때 평균 일일 대여 요금은 소수 첫 번째 자리에서 반올림하고, 컬럼명은 AVERAGE_FEE 로 지정해주세요.
SELECT ROUND(AVG(DAILY_FEE)) AS AVERAGE_FEE
  FROM CAR_RENTAL_COMPANY_CAR
 GROUP BY CAR_TYPE
HAVING CAR_TYPE = 'SUV';

-- CAR_RENTAL_COMPANY_CAR 테이블에서 '통풍시트', '열선시트', '가죽시트' 중 하나 이상의 옵션이 포함된 자동차가 
-- 자동차 종류 별로 몇 대인지 출력하는 SQL문을 작성해주세요. 이때 자동차 수에 대한 컬럼명은 CARS로 지정하고, 결과는 자동차 종류를 기준으로 오름차순 정렬해주세요.
SELECT CAR_TYPE
     , COUNT(*) CARS
  FROM CAR_RENTAL_COMPANY_CAR
 WHERE OPTIONS LIKE '%통풍시트%'
    OR OPTIONS LIKE '%열선시트%'
    OR OPTIONS LIKE '%가죽시트%'
 GROUP BY CAR_TYPE
 ORDER BY CAR_TYPE;
 
-- CAR_RENTAL_COMPANY_CAR 테이블에서 '네비게이션' 옵션이 포함된 자동차 리스트를 출력하는 SQL문을 작성해주세요. 결과는 자동차 ID를 기준으로 내림차순 정렬해주세요.
SELECT *
  FROM CAR_RENTAL_COMPANY_CAR
 WHERE OPTIONS LIKE '%네비게이션%'
 ORDER BY CAR_ID DESC;
 
-- CAR_RENTAL_COMPANY_RENTAL_HISTORY 테이블에서 대여 시작일이 2022년 9월에 속하는 대여 기록에 대해서 대여 기간이 30일 이상이면 '장기 대여'
-- 그렇지 않으면 '단기 대여' 로 표시하는 컬럼(컬럼명: RENT_TYPE)을 추가하여 대여기록을 출력하는 SQL문을 작성해주세요. 결과는 대여 기록 ID를 기준으로 내림차순 정렬해주세요.
 SELECT HISTORY_ID
      , CAR_ID
      , DATE_FORMAT(START_DATE, '%Y-%m-%d') START_DATE
      , DATE_FORMAT(END_DATE, '%Y-%m-%d') END_DATE
      , (CASE WHEN DATEDIFF(END_DATE, START_DATE) >= 29 THEN '장기 대여'
              ELSE '단기 대여' END) RENT_TYPE
   FROM CAR_RENTAL_COMPANY_RENTAL_HISTORY
  WHERE START_DATE LIKE '2022-09%'
  ORDER BY HISTORY_ID DESC;

-- CAR_RENTAL_COMPANY_CAR 테이블과 CAR_RENTAL_COMPANY_RENTAL_HISTORY 테이블에서 자동차 종류가 
-- '세단'인 자동차들 중 10월에 대여를 시작한 기록이 있는 자동차 ID 리스트를 출력하는 SQL문을 작성해주세요. 
-- 자동차 ID 리스트는 중복이 없어야 하며, 자동차 ID를 기준으로 내림차순 정렬해주세요.
SELECT DISTINCT C.CAR_ID 
  FROM CAR_RENTAL_COMPANY_RENTAL_HISTORY RH
  JOIN CAR_RENTAL_COMPANY_CAR C ON C.CAR_ID = RH.CAR_ID 
 WHERE C.CAR_TYPE = '세단'
   AND DATE_FORMAT(RH.START_DATE, '%Y-%m') = '2022-10'
 ORDER BY CAR_ID DESC;