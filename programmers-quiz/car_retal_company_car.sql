다음은 어느 자동차 대여 회사에서 대여중인 자동차들의 정보를 담은 CAR_RENTAL_COMPANY_CAR 테이블입니다. 
CAR_RENTAL_COMPANY_CAR 테이블은 아래와 같은 구조로 되어있으며, CAR_ID, CAR_TYPE, DAILY_FEE, OPTIONS 는 
각각 자동차 ID, 자동차 종류, 일일 대여 요금(원), 자동차 옵션 리스트를 나타냅니다.

Column name Type  Nullable
CAR_ID  INTEGER FALSE
CAR_TYPE  VARCHAR(255)  FALSE
DAILY_FEE INTEGER FALSE
OPTIONS VARCHAR(255)  FALSE
자동차 종류는 '세단', 'SUV', '승합차', '트럭', '리무진' 이 있습니다. 자동차 옵션 리스트는 콤마(',')로 
구분된 키워드 리스트(예: '열선시트', '스마트키', '주차감지센서')로 되어있으며, 
키워드 종류는 '주차감지센서', '스마트키', '네비게이션', '통풍시트', '열선시트', '후방카메라', '가죽시트' 가 있습니다.

CREATE TABLE IF NOT EXISTS CAR_RENTAL_COMPANY_CAR (
  CAR_ID INTEGER NOT NULL PRIMARY KEY,
  CAR_TYPE VARCHAR(255) NOT NULL,
  DAILY_FEE INTEGER NOT NULL,
  OPTIONS VARCHAR(255) NOT NULL
);

INSERT INTO CAR_RENTAL_COMPANY_CAR (CAR_ID, CAR_TYPE, DAILY_FEE, OPTIONS) VALUES (1, 'SUV', 25000, '가죽시트,열선시트,후방카메라');
INSERT INTO CAR_RENTAL_COMPANY_CAR (CAR_ID, CAR_TYPE, DAILY_FEE, OPTIONS) VALUES (2, '세단', 14000, '스마트키,네비게이션,열선시트');
INSERT INTO CAR_RENTAL_COMPANY_CAR (CAR_ID, CAR_TYPE, DAILY_FEE, OPTIONS) VALUES (3, '트럭', 32000, '주차감지센서,후방카메라,가죽시트');
INSERT INTO CAR_RENTAL_COMPANY_CAR (CAR_ID, CAR_TYPE, DAILY_FEE, OPTIONS) VALUES (4, '세단', 12000, '주차감지센서,네비게이션,열선시트');
INSERT INTO CAR_RENTAL_COMPANY_CAR (CAR_ID, CAR_TYPE, DAILY_FEE, OPTIONS) VALUES (5, '세단', 22000, '가죽시트,네비게이션,열선시트,후방카메라,주차감지센서');

-- 테이블 확인
SELECT * FROM CAR_RENTAL_COMPANY_CAR;

-- 데이터 비우기
TRUNCATE CAR_RENTAL_COMPANY_CAR;

다음은 어느 자동차 대여 회사의 자동차 대여 기록 정보를 담은 CAR_RENTAL_COMPANY_RENTAL_HISTORY 테이블입니다. 
CAR_RENTAL_COMPANY_RENTAL_HISTORY 테이블은 아래와 같은 구조로 되어있으며, 
HISTORY_ID, CAR_ID, START_DATE, END_DATE 는 각각 자동차 대여 기록 ID, 자동차 ID, 대여 시작일, 대여 종료일을 나타냅니다.

Column name Type  Nullable
HISTORY_ID  INTEGER FALSE
CAR_ID  INTEGER FALSE
START_DATE  DATE  FALSE
END_DATE  DATE  FALSE

CREATE TABLE IF NOT EXISTS CAR_RENTAL_COMPANY_RENTAL_HISTORY (
  HISTORY_ID INTEGER NOT NULL PRIMARY KEY,
  CAR_ID  INTEGER NOT NULL,
  START_DATE DATE NOT NULL,
  END_DATE DATE NOT NULL
);

INSERT INTO CAR_RENTAL_COMPANY_RENTAL_HISTORY (HISTORY_ID, CAR_ID, START_DATE, END_DATE) VALUES (1, 1, '2022-08-27', '2022-09-02');
INSERT INTO CAR_RENTAL_COMPANY_RENTAL_HISTORY (HISTORY_ID, CAR_ID, START_DATE, END_DATE) VALUES (2, 1, '2022-10-03', '2022-10-04');
INSERT INTO CAR_RENTAL_COMPANY_RENTAL_HISTORY (HISTORY_ID, CAR_ID, START_DATE, END_DATE) VALUES (3, 2, '2022-10-05', '2022-10-20');
INSERT INTO CAR_RENTAL_COMPANY_RENTAL_HISTORY (HISTORY_ID, CAR_ID, START_DATE, END_DATE) VALUES (4, 2, '2022-10-10', '2022-11-12');
INSERT INTO CAR_RENTAL_COMPANY_RENTAL_HISTORY (HISTORY_ID, CAR_ID, START_DATE, END_DATE) VALUES (5, 3, '2022-10-16', '2022-10-17');
INSERT INTO CAR_RENTAL_COMPANY_RENTAL_HISTORY (HISTORY_ID, CAR_ID, START_DATE, END_DATE) VALUES (6, 1, '2022-11-07', '2022-12-06');
INSERT INTO CAR_RENTAL_COMPANY_RENTAL_HISTORY (HISTORY_ID, CAR_ID, START_DATE, END_DATE) VALUES (7, 3, '2022-10-16', '2022-10-19');
INSERT INTO CAR_RENTAL_COMPANY_RENTAL_HISTORY (HISTORY_ID, CAR_ID, START_DATE, END_DATE) VALUES (8, 1, '2022-09-03', '2022-09-07');
INSERT INTO CAR_RENTAL_COMPANY_RENTAL_HISTORY (HISTORY_ID, CAR_ID, START_DATE, END_DATE) VALUES (9, 1, '2022-09-18', '2022-09-19');
INSERT INTO CAR_RENTAL_COMPANY_RENTAL_HISTORY (HISTORY_ID, CAR_ID, START_DATE, END_DATE) VALUES (10, 2, '2022-09-08', '2022-09-10');
INSERT INTO CAR_RENTAL_COMPANY_RENTAL_HISTORY (HISTORY_ID, CAR_ID, START_DATE, END_DATE) VALUES (11, 2, '2022-10-16', '2022-10-19');
INSERT INTO CAR_RENTAL_COMPANY_RENTAL_HISTORY (HISTORY_ID, CAR_ID, START_DATE, END_DATE) VALUES (12, 1, '2022-09-29', '2022-10-06');
INSERT INTO CAR_RENTAL_COMPANY_RENTAL_HISTORY (HISTORY_ID, CAR_ID, START_DATE, END_DATE) VALUES (13, 2, '2022-10-30', '2022-11-01');
INSERT INTO CAR_RENTAL_COMPANY_RENTAL_HISTORY (HISTORY_ID, CAR_ID, START_DATE, END_DATE) VALUES (14, 2, '2022-11-05', '2022-11-05');
INSERT INTO CAR_RENTAL_COMPANY_RENTAL_HISTORY (HISTORY_ID, CAR_ID, START_DATE, END_DATE) VALUES (15, 3, '2022-11-11', '2022-11-11');

-- 테이블 확인
SELECT * FROM CAR_RENTAL_COMPANY_RENTAL_HISTORY;

-- 데이터 비우기
TRUNCATE CAR_RENTAL_COMPANY_RENTAL_HISTORY;

CAR_RENTAL_COMPANY_DISCOUNT_PLAN 테이블은 아래와 같은 구조로 되어있으며, PLAN_ID, CAR_TYPE, DURATION_TYPE, DISCOUNT_RATE 는 
각각 요금 할인 정책 ID, 자동차 종류, 대여 기간 종류, 할인율(%)을 나타냅니다.

Column name Type  Nullable
PLAN_ID INTEGER FALSE
CAR_TYPE  VARCHAR(255)  FALSE
DURATION_TYPE VARCHAR(255)  FALSE
DISCOUNT_RATE INTEGER FALSE

CREATE TABLE IF NOT EXISTS CAR_RENTAL_COMPANY_DISCOUNT_PLAN (
  PLAN_ID INTEGER NOT NULL,
  CAR_TYPE VARCHAR(255) NOT NULL,
  DURATION_TYPE VARCHAR(255) NOT NULL,
  DISCOUNT_RATE INTEGER NOT NULL
);

할인율이 적용되는 대여 기간 종류로는 '7일 이상' (대여 기간이 7일 이상 30일 미만인 경우), '30일 이상' (대여 기간이 30일 이상 90일 미만인 경우), 
'90일 이상' (대여 기간이 90일 이상인 경우) 이 있습니다. 대여 기간이 7일 미만인 경우 할인정책이 없습니다.

INSERT INTO CAR_RENTAL_COMPANY_DISCOUNT_PLAN (PLAN_ID, CAR_TYPE, DURATION_TYPE, DISCOUNT_RATE) VALUES (1, '트럭',	 '7일 이상', 5);
INSERT INTO CAR_RENTAL_COMPANY_DISCOUNT_PLAN (PLAN_ID, CAR_TYPE, DURATION_TYPE, DISCOUNT_RATE) VALUES (2, '트럭',	 '30일 이상', 7);
INSERT INTO CAR_RENTAL_COMPANY_DISCOUNT_PLAN (PLAN_ID, CAR_TYPE, DURATION_TYPE, DISCOUNT_RATE) VALUES (3, '트럭',	 '90일 이상', 10);
INSERT INTO CAR_RENTAL_COMPANY_DISCOUNT_PLAN (PLAN_ID, CAR_TYPE, DURATION_TYPE, DISCOUNT_RATE) VALUES (4, '세단',	 '7일 이상', 5);
INSERT INTO CAR_RENTAL_COMPANY_DISCOUNT_PLAN (PLAN_ID, CAR_TYPE, DURATION_TYPE, DISCOUNT_RATE) VALUES (5, '세단',	 '30일 이상', 10);
INSERT INTO CAR_RENTAL_COMPANY_DISCOUNT_PLAN (PLAN_ID, CAR_TYPE, DURATION_TYPE, DISCOUNT_RATE) VALUES (6, '세단',	 '90일 이상', 15);
INSERT INTO CAR_RENTAL_COMPANY_DISCOUNT_PLAN (PLAN_ID, CAR_TYPE, DURATION_TYPE, DISCOUNT_RATE) VALUES (7, 'SUV', '7일 이상', 3);
INSERT INTO CAR_RENTAL_COMPANY_DISCOUNT_PLAN (PLAN_ID, CAR_TYPE, DURATION_TYPE, DISCOUNT_RATE) VALUES (8, 'SUV', '30일 이상', 8);
INSERT INTO CAR_RENTAL_COMPANY_DISCOUNT_PLAN (PLAN_ID, CAR_TYPE, DURATION_TYPE, DISCOUNT_RATE) VALUES (9, 'SUV', '90일 이상', 12);


-- 테이블 확인
SELECT * FROM CAR_RENTAL_COMPANY_DISCOUNT_PLAN;

-- 데이터 비우기
TRUNCATE CAR_RENTAL_COMPANY_DISCOUNT_PLAN;


-- CAR_RENTAL_COMPANY_CAR 테이블에서 자동차 종류가 'SUV'인 자동차들의 평균 일일 대여 요금을 출력하는 SQL문을 작성해주세요. 
-- 이때 평균 일일 대여 요금은 소수 첫 번째 자리에서 반올림하고, 컬럼명은 AVERAGE_FEE 로 지정해주세요.
SELECT ROUND(AVG(DAILY_FEE)) AS AVERAGE_FEE
  FROM CAR_RENTAL_COMPANY_CAR
 GROUP BY CAR_TYPE
HAVING CAR_TYPE = 'SUV';

-- CAR_RENTAL_COMPANY_CAR 테이블에서 '통풍시트', '열선시트', '가죽시트' 중 하나 이상의 옵션이 포함된 자동차가 
-- 자동차 종류 별로 몇 대인지 출력하는 SQL문을 작성해주세요. 이때 자동차 수에 대한 컬럼명은 CARS로 지정하고, 결과는 자동차 종류를 기준으로 오름차순 정렬해주세요.
SELECT CAR_TYPE
     , COUNT(*) CARS
  FROM CAR_RENTAL_COMPANY_CAR
 WHERE OPTIONS LIKE '%통풍시트%'
    OR OPTIONS LIKE '%열선시트%'
    OR OPTIONS LIKE '%가죽시트%'
 GROUP BY CAR_TYPE
 ORDER BY CAR_TYPE;
 
-- CAR_RENTAL_COMPANY_CAR 테이블에서 '네비게이션' 옵션이 포함된 자동차 리스트를 출력하는 SQL문을 작성해주세요. 결과는 자동차 ID를 기준으로 내림차순 정렬해주세요.
SELECT *
  FROM CAR_RENTAL_COMPANY_CAR
 WHERE OPTIONS LIKE '%네비게이션%'
 ORDER BY CAR_ID DESC;
 
-- CAR_RENTAL_COMPANY_RENTAL_HISTORY 테이블에서 대여 시작일이 2022년 9월에 속하는 대여 기록에 대해서 대여 기간이 30일 이상이면 '장기 대여'
-- 그렇지 않으면 '단기 대여' 로 표시하는 컬럼(컬럼명: RENT_TYPE)을 추가하여 대여기록을 출력하는 SQL문을 작성해주세요. 결과는 대여 기록 ID를 기준으로 내림차순 정렬해주세요.
 SELECT HISTORY_ID
      , CAR_ID
      , DATE_FORMAT(START_DATE, '%Y-%m-%d') START_DATE
      , DATE_FORMAT(END_DATE, '%Y-%m-%d') END_DATE
      , (CASE WHEN DATEDIFF(END_DATE, START_DATE) >= 29 THEN '장기 대여'
              ELSE '단기 대여' END) RENT_TYPE
   FROM CAR_RENTAL_COMPANY_RENTAL_HISTORY
  WHERE START_DATE LIKE '2022-09%'
  ORDER BY HISTORY_ID DESC;

-- CAR_RENTAL_COMPANY_CAR 테이블과 CAR_RENTAL_COMPANY_RENTAL_HISTORY 테이블에서 자동차 종류가 
-- '세단'인 자동차들 중 10월에 대여를 시작한 기록이 있는 자동차 ID 리스트를 출력하는 SQL문을 작성해주세요. 
-- 자동차 ID 리스트는 중복이 없어야 하며, 자동차 ID를 기준으로 내림차순 정렬해주세요.
SELECT DISTINCT C.CAR_ID 
  FROM CAR_RENTAL_COMPANY_RENTAL_HISTORY RH
  JOIN CAR_RENTAL_COMPANY_CAR C ON C.CAR_ID = RH.CAR_ID 
 WHERE C.CAR_TYPE = '세단'
   AND DATE_FORMAT(RH.START_DATE, '%Y-%m') = '2022-10'
 ORDER BY CAR_ID DESC;
 
-- CAR_RENTAL_COMPANY_RENTAL_HISTORY 테이블에서 2022년 10월 16일에 대여 중인 자동차인 경우 '대여중' 이라고 표시하고, 
-- 대여 중이지 않은 자동차인 경우 '대여 가능'을 표시하는 컬럼(컬럼명: AVAILABILITY)을 추가하여 자동차 ID와 AVAILABILITY 리스트를 출력하는 SQL문을 작성해주세요. 
-- 이때 반납 날짜가 2022년 10월 16일인 경우에도 '대여중'으로 표시해주시고 결과는 자동차 ID를 기준으로 내림차순 정렬해주세요.

SELECT DISTINCT H.CAR_ID
     , CASE WHEN R.RENTED > 0 THEN '대여중'
       ELSE '대여 가능' END
  FROM CAR_RENTAL_COMPANY_RENTAL_HISTORY H
  LEFT JOIN (SELECT COUNT(*) RENTED
                  , CAR_ID 
               FROM CAR_RENTAL_COMPANY_RENTAL_HISTORY
              WHERE '2022-10-16' BETWEEN START_DATE AND END_DATE
              GROUP BY CAR_ID) R
         ON H.CAR_ID = R.CAR_ID
 ORDER BY H.CAR_ID DESC;
 
-- CAR_RENTAL_COMPANY_RENTAL_HISTORY 테이블에서 평균 대여 기간이 7일 이상인 자동차들의 자동차 ID와 평균 대여 기간(컬럼명: AVERAGE_DURATION) 
-- 리스트를 출력하는 SQL문을 작성해주세요. 평균 대여 기간은 소수점 두번째 자리에서 반올림하고, 결과는 평균 대여 기간을 기준으로 내림차순 정렬해주시고, 평균 대여 기간이 같으면 자동차 ID를 기준으로 내림차순 정렬해주세요.
SELECT CAR_ID
     , ROUND(AVG(DATEDIFF(END_DATE, START_DATE))+1,1) AVERAGE_DURATION
  FROM CAR_RENTAL_COMPANY_RENTAL_HISTORY
 GROUP BY CAR_ID
HAVING AVERAGE_DURATION >= 7
 ORDER BY AVERAGE_DURATION DESC, CAR_ID DESC; 
 
-- CAR_RENTAL_COMPANY_RENTAL_HISTORY 테이블에서 대여 시작일을 기준으로 2022년 8월부터 2022년 10월까지 총 대여 횟수가 5회 이상인 자동차들에 대해서 
-- 해당 기간 동안의 월별 자동차 ID 별 총 대여 횟수(컬럼명: RECORDS) 리스트를 출력하는 SQL문을 작성해주세요. 
-- 결과는 월을 기준으로 오름차순 정렬하고, 월이 같다면 자동차 ID를 기준으로 내림차순 정렬해주세요. 특정 월의 총 대여 횟수가 0인 경우에는 결과에서 제외해주세요.
SELECT COUNT(*)
  FROM CAR_RENTAL_COMPANY_RENTAL_HISTORY
 GROUP BY CAR_ID 
 WHERE TIMEDIFF(START_DATE, '2022-08-01') >=0 
   AND TIMEDIFF(END_DATE, '2022-10-31') <= 0; 
 
-- CAR_RENTAL_COMPANY_RENTAL_HISTORY 테이블에서 대여 시작일을 기준으로 2022년 8월부터 2022년 10월까지 총 대여 횟수가 5회 이상인 자동차들에 대해서 
-- 해당 기간 동안의 월별 자동차 ID 별 총 대여 횟수(컬럼명: RECORDS) 리스트를 출력하는 SQL문을 작성해주세요. 결과는 월을 기준으로 오름차순 정렬하고, 
-- 월이 같다면 자동차 ID를 기준으로 내림차순 정렬해주세요. 특정 월의 총 대여 횟수가 0인 경우에는 결과에서 제외해주세요.
 
SELECT RC.MONT MONTH
     , RC.CAR_ID
     , RC.RECORDS
  FROM (
        SELECT MT.MONT
             , CAR_ID
             , COUNT(*) RECORDS
          FROM (SELECT MONTH(START_DATE) MONT
                     , CAR_ID
                  FROM CAR_RENTAL_COMPANY_RENTAL_HISTORY 
                 WHERE MONTH(START_DATE) BETWEEN 8 AND 10) MT
         GROUP BY MT.CAR_ID, MT.MONT
        ) RC
  JOIN 
        (
         SELECT CAR_ID
              , COUNT(*) RENTAL
           FROM CAR_RENTAL_COMPANY_RENTAL_HISTORY
          WHERE MONTH(START_DATE) BETWEEN 8 AND 10
          GROUP BY CAR_ID
          HAVING RENTAL >= 5
        ) RT
    ON RC.CAR_ID = RT.CAR_ID
 ORDER BY MONTH, CAR_ID DESC;

-- CAR_RENTAL_COMPANY_CAR 테이블과 CAR_RENTAL_COMPANY_RENTAL_HISTORY 테이블과 CAR_RENTAL_COMPANY_DISCOUNT_PLAN 테이블에서 자동차 종류가 
-- '트럭'인 자동차의 대여 기록에 대해서 대여 기록 별로 대여 금액(컬럼명: FEE)을 구하여 대여 기록 ID와 대여 금액 리스트를 출력하는 SQL문을 작성해주세요. 
-- 결과는 대여 금액을 기준으로 내림차순 정렬하고, 대여 금액이 같은 경우 대여 기록 ID를 기준으로 내림차순 정렬해주세요. 
SELECT A.HISTORY_ID
     , ROUND(C.DAILY_FEE*A.RENTAL*A.DISCOUNT_RATE) FEE
  FROM
      (SELECT H.HISTORY_ID 
            , H.RENTAL
            , H.CAR_ID 
            , P.CAR_TYPE
            , P.DURATION
            , (CASE WHEN H.RENTAL >= 7 THEN P.DISCOUNT_RATE ELSE 1 END) DISCOUNT_RATE 
         FROM (SELECT HISTORY_ID
                    , DATEDIFF(END_DATE, START_DATE)+1 RENTAL
                    , CAR_ID
                 FROM CAR_RENTAL_COMPANY_RENTAL_HISTORY) H
         JOIN (SELECT SUBSTRING_INDEX(DURATION_TYPE, '일', 1) DURATION
                    , CAR_TYPE
                    , (100-DISCOUNT_RATE)*0.01 DISCOUNT_RATE
                 FROM CAR_RENTAL_COMPANY_DISCOUNT_PLAN
                WHERE CAR_TYPE = '트럭') P 
        WHERE DURATION = CASE WHEN RENTAL BETWEEN 7 AND 29 THEN 7 
                              WHEN RENTAL BETWEEN 30 AND 89 THEN 30
                              WHEN RENTAL >= 90 THEN 90 
                              ELSE 7 END) A
   JOIN CAR_RENTAL_COMPANY_CAR C ON A.CAR_ID = C.CAR_ID
                                AND C.CAR_TYPE = A.CAR_TYPE
 ORDER BY FEE DESC, HISTORY_ID DESC;
 
-- CAR_RENTAL_COMPANY_CAR 테이블과 CAR_RENTAL_COMPANY_RENTAL_HISTORY 테이블과 CAR_RENTAL_COMPANY_DISCOUNT_PLAN 테이블에서 자동차 종류가
-- '세단' 또는 'SUV' 인 자동차 중 2022년 11월 1일부터 2022년 11월 30일까지 대여 가능하고 30일간의 대여 금액이 50만원 이상 200만원 미만인 자동차에 대해서
-- 자동차 ID, 자동차 종류, 대여 금액(컬럼명: FEE) 리스트를 출력하는 SQL문을 작성해주세요.
-- 결과는 대여 금액을 기준으로 내림차순 정렬하고, 대여 금액이 같은 경우 자동차 종류를 기준으로 오름차순 정렬, 자동차 종류까지 같은 경우 자동차 ID를 기준으로 내림차순 정렬해주세요.
SELECT * FROM CAR_RENTAL_COMPANY_CAR;
SELECT * FROM CAR_RENTAL_COMPANY_RENTAL_HISTORY;
SELECT * FROM CAR_RENTAL_COMPANY_DISCOUNT_PLAN;

SELECT C.CAR_ID
     , C.CAR_TYPE
     , ROUND(C.DAILY_FEE*30*(100-DISCOUNT_RATE)*0.01) FEE
  FROM (SELECT CAR_ID
             , CAR_TYPE
             , DAILY_FEE 
          FROM CAR_RENTAL_COMPANY_CAR 
         WHERE CAR_TYPE IN ('SUV', '세단')
           AND CAR_ID NOT IN (SELECT CAR_ID
                                FROM CAR_RENTAL_COMPANY_RENTAL_HISTORY 
                               WHERE DATE_FORMAT(END_DATE, '%Y-%m') >= '2022-11'
                                 AND DATE_FORMAT(START_DATE, '%Y-%m') < '2022-12') 
        ) C
  JOIN (SELECT CAR_TYPE
             , DISCOUNT_RATE 
          FROM CAR_RENTAL_COMPANY_DISCOUNT_PLAN 
         WHERE DURATION_TYPE = '30일 이상') P 
    ON C.CAR_TYPE = P.CAR_TYPE 
  WHERE C.DAILY_FEE*30*(100-DISCOUNT_RATE)*0.01 BETWEEN 500000 AND 1999999
  ORDER BY FEE DESC, CAR_TYPE, CAR_ID DESC;

