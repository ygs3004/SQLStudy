다음은 식당의 정보를 담은 REST_INFO 테이블입니다. REST_INFO 테이블은 다음과 같으며
REST_ID, REST_NAME, FOOD_TYPE, VIEWS, FAVORITES, PARKING_LOT, ADDRESS, TEL은 
식당 ID, 식당 이름, 음식 종류, 조회수, 즐겨찾기수, 주차장 유무, 주소, 전화번호를 의미합니다.

Column name Type  Nullable
REST_ID VARCHAR(5)  FALSE
REST_NAME VARCHAR(50) FALSE
FOOD_TYPE VARCHAR(20) TRUE
VIEWS NUMBER  TRUE
FAVORITES NUMBER  TRUE
PARKING_LOT VARCHAR(1)  TRUE
ADDRESS VARCHAR(100)  TRUE
TEL VARCHAR(100)  TRUE

CREATE TABLE IF NOT EXISTS REST_INFO (
  REST_ID VARCHAR(5)  NOT NULL PRIMARY KEY,
  REST_NAME VARCHAR(50) NOT NULL,
  FOOD_TYPE VARCHAR(20),
  VIEWS INT,
  FAVORITES INT,
  PARKING_LOT VARCHAR(1),
  ADDRESS VARCHAR(100),
  TEL VARCHAR(100)
);

INSERT INTO REST_INFO (REST_ID, REST_NAME, FOOD_TYPE, VIEWS, FAVORITES, PARKING_LOT, ADDRESS, TEL) VALUES ('00001', '은돼지식당', '한식', 1150345, 734, 'N', '서울특별시 중구 다산로 149', '010-4484-8751');
INSERT INTO REST_INFO (REST_ID, REST_NAME, FOOD_TYPE, VIEWS, FAVORITES, PARKING_LOT, ADDRESS, TEL) VALUES ('00002', '하이가쯔네', '일식', 120034, 112, 'N', '서울시 중구 신당동 375-21', NULL);
INSERT INTO REST_INFO (REST_ID, REST_NAME, FOOD_TYPE, VIEWS, FAVORITES, PARKING_LOT, ADDRESS, TEL) VALUES ('00003', '따띠따띠뜨', '양식', 1234023, 102, 'N', '서울시 강남구 신사동 627-3 1F', '02-6397-1023');
INSERT INTO REST_INFO (REST_ID, REST_NAME, FOOD_TYPE, VIEWS, FAVORITES, PARKING_LOT, ADDRESS, TEL) VALUES ('00004', '스시사카우스', '일식', 1522074, 230, 'N', '서울시 서울시 강남구 신사동 627-27', '010-9394-2554');
INSERT INTO REST_INFO (REST_ID, REST_NAME, FOOD_TYPE, VIEWS, FAVORITES, PARKING_LOT, ADDRESS, TEL) VALUES ('00005', '코슌스', '일식', 15301, 123, 'N', '서울특별시 강남구 언주로153길', '010-1315-8729');
INSERT INTO REST_INFO (REST_ID, REST_NAME, FOOD_TYPE, VIEWS, FAVORITES, PARKING_LOT, ADDRESS, TEL) VALUES ('00028', '대우부대찌개', '한식', 52310, 10, 'N', '경기도 용인시 처인구 남사읍 처인성로 309', '031-235-1235');
INSERT INTO REST_INFO (REST_ID, REST_NAME, FOOD_TYPE, VIEWS, FAVORITES, PARKING_LOT, ADDRESS, TEL) VALUES ('00039', '광주식당', '한식', 23001, 20, 'N', '경기도 부천시 산업로8번길 60', '031-235-6423');
INSERT INTO REST_INFO (REST_ID, REST_NAME, FOOD_TYPE, VIEWS, FAVORITES, PARKING_LOT, ADDRESS, TEL) VALUES ('00035', '삼촌식당', '일식', 532123, 80, 'N', '서울특별시 강서구 가로공원로76가길', '02-135-1266');

-- 테이블 확인
SELECT * FROM REST_INFO;

-- 데이터 비우기
TRUNCATE REST_INFO;

REST_REVIEW 테이블은 다음과 같으며 REVIEW_ID, REST_ID, MEMBER_ID, REVIEW_SCORE, REVIEW_TEXT,REVIEW_DATE는 
각각 리뷰 ID, 식당 ID, 회원 ID, 점수, 리뷰 텍스트, 리뷰 작성일을 의미합니다.

Column name Type  Nullable
REVIEW_ID VARCHAR(10) FALSE
REST_ID VARCHAR(10) TRUE
MEMBER_ID VARCHAR(100)  TRUE
REVIEW_SCORE  NUMBER  TRUE
REVIEW_TEXT VARCHAR(1000) TRUE
REVIEW_DATE DATE  TRUE

CREATE TABLE IF NOT EXISTS REST_REVIEW (
  REVIEW_ID VARCHAR(10) NOT NULL,
  REST_ID VARCHAR(10),
  MEMBER_ID VARCHAR(100),
  REVIEW_SCORE INT,
  REVIEW_TEXT VARCHAR(1000),
  REVIEW_DATE DATE
);

INSERT INTO REST_REVIEW (REVIEW_ID, REST_ID, MEMBER_ID, REVIEW_SCORE, REVIEW_TEXT, REVIEW_DATE) VALUES ('R000000065', '00028', 'soobin97@naver.com', 5, '부찌 국물에서 샤브샤브 맛이나고 깔끔', '2022-04-12');
INSERT INTO REST_REVIEW (REVIEW_ID, REST_ID, MEMBER_ID, REVIEW_SCORE, REVIEW_TEXT, REVIEW_DATE) VALUES ('R000000066', '00039', 'yelin1130@gmail.com', 5, '김치찌개 최곱니다.', '2022-02-12');
INSERT INTO REST_REVIEW (REVIEW_ID, REST_ID, MEMBER_ID, REVIEW_SCORE, REVIEW_TEXT, REVIEW_DATE) VALUES ('R000000067', '00028', 'yelin1130@gmail.com', 5, '햄이 많아서 좋아요', '2022-02-22');
INSERT INTO REST_REVIEW (REVIEW_ID, REST_ID, MEMBER_ID, REVIEW_SCORE, REVIEW_TEXT, REVIEW_DATE) VALUES ('R000000068', '00035', 'ksyi0316@gmail.com', 5, '숙성회가 끝내줍니다.', '2022-02-15');
INSERT INTO REST_REVIEW (REVIEW_ID, REST_ID, MEMBER_ID, REVIEW_SCORE, REVIEW_TEXT, REVIEW_DATE) VALUES ('R000000069', '00035', 'yoonsy95@naver.com', 4, '비린내가 전혀없어요.', '2022-04-16');

-- 테이블 확인
SELECT * FROM REST_REVIEW;

-- 데이터 비우기
TRUNCATE REST_REVIEW;

-- REST_INFO 테이블에서 음식종류별로 즐겨찾기수가 가장 많은 식당의 음식 종류, ID, 식당 이름, 즐겨찾기수를 조회하는 SQL문을 작성해주세요. 
-- 이때 결과는 음식 종류를 기준으로 내림차순 정렬해주세요.
SELECT RI.FOOD_TYPE
     , RI.REST_ID
     , RI.REST_NAME
     , RI.FAVORITES
  FROM REST_INFO RI
  JOIN (SELECT FOOD_TYPE, MAX(FAVORITES) FAVORITES 
          FROM REST_INFO 
         GROUP BY FOOD_TYPE) RIM
    ON RI.FAVORITES = RIM.FAVORITES 
   AND RI.FOOD_TYPE = RIM.FOOD_TYPE
 ORDER BY RI.FOOD_TYPE DESC;
 
-- REST_INFO와 REST_REVIEW 테이블에서 서울에 위치한 식당들의 식당 ID, 식당 이름, 음식 종류, 즐겨찾기수, 주소, 리뷰 평균 점수를 조회하는 SQL문을 작성해주세요. 
-- 이때 리뷰 평균점수는 소수점 세 번째 자리에서 반올림 해주시고 결과는 평균점수를 기준으로 내림차순 정렬해주시고, 평균점수가 같다면 즐겨찾기수를 기준으로 내림차순 정렬해주세요.
SELECT RI.REST_ID
     , RI.REST_NAME
     , RI.FOOD_TYPE
     , RI.FAVORITES
     , RI.ADDRESS
     , RR.AVG AS SCORE
  FROM REST_INFO RI
  JOIN (SELECT REST_ID, ROUND(AVG(REVIEW_SCORE), 2) AVG
          FROM REST_REVIEW
         GROUP BY REST_ID) RR 
    ON RI.REST_ID = RR.REST_ID
 WHERE RI.ADDRESS LIKE '서울%'
 ORDER BY RR.AVG DESC, RI.FAVORITES DESC;